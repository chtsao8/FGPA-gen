-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity unoptimized_conv_3_3_rdai is
port (
    arg_in0_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
    arg_in0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    arg_out_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    arg_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    arg_in0_TVALID : IN STD_LOGIC;
    arg_in0_TREADY : OUT STD_LOGIC;
    arg_out_TVALID : OUT STD_LOGIC;
    arg_out_TREADY : IN STD_LOGIC );
end;


architecture behav of unoptimized_conv_3_3_rdai is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "unoptimized_conv_3_3_rdai,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.129000,HLS_SYN_LAT=31258,HLS_SYN_TPT=31259,HLS_SYN_MEM=4,HLS_SYN_DSP=2,HLS_SYN_FF=306,HLS_SYN_LUT=952,HLS_VERSION=2020_1}";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ap_rst_n_inv : STD_LOGIC;
    signal Block_proc75_U0_ap_start : STD_LOGIC;
    signal Block_proc75_U0_ap_done : STD_LOGIC;
    signal Block_proc75_U0_ap_continue : STD_LOGIC;
    signal Block_proc75_U0_ap_idle : STD_LOGIC;
    signal Block_proc75_U0_ap_ready : STD_LOGIC;
    signal Block_proc75_U0_arg_in0_TREADY : STD_LOGIC;
    signal Block_proc75_U0_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_this_assign_channel : STD_LOGIC;
    signal this_assign_channel_full_n : STD_LOGIC;
    signal write_U0_ap_start : STD_LOGIC;
    signal write_U0_ap_done : STD_LOGIC;
    signal write_U0_ap_continue : STD_LOGIC;
    signal write_U0_ap_idle : STD_LOGIC;
    signal write_U0_ap_ready : STD_LOGIC;
    signal write_U0_start_out : STD_LOGIC;
    signal write_U0_start_write : STD_LOGIC;
    signal write_U0_HWStream_hw_uint_16_values_V_val_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal write_U0_HWStream_hw_uint_16_values_V_val_V_write : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_ap_start : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_start_full_n : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_ap_done : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_ap_continue : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_ap_idle : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_ap_ready : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_start_out : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_start_write : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_hw_input_stencil_values_V_val_V_read : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_hw_output_stencil_values_V_val_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal unoptimized_conv_3_3_U0_hw_output_stencil_values_V_val_V_write : STD_LOGIC;
    signal unoptimized_conv_3_3_U0_tlast_values_V_val_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal unoptimized_conv_3_3_U0_tlast_values_V_val_V_write : STD_LOGIC;
    signal read_1_U0_ap_start : STD_LOGIC;
    signal read_1_U0_ap_done : STD_LOGIC;
    signal read_1_U0_ap_continue : STD_LOGIC;
    signal read_1_U0_ap_idle : STD_LOGIC;
    signal read_1_U0_ap_ready : STD_LOGIC;
    signal read_1_U0_HWStream_hw_uint_16_values_V_val_V_read : STD_LOGIC;
    signal read_1_U0_ap_return : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_channel_done_p_0 : STD_LOGIC;
    signal p_0_full_n : STD_LOGIC;
    signal operator_int_1_U0_ap_start : STD_LOGIC;
    signal operator_int_1_U0_ap_done : STD_LOGIC;
    signal operator_int_1_U0_ap_continue : STD_LOGIC;
    signal operator_int_1_U0_ap_idle : STD_LOGIC;
    signal operator_int_1_U0_ap_ready : STD_LOGIC;
    signal operator_int_1_U0_hw_uint_16_val_V : STD_LOGIC_VECTOR (15 downto 0);
    signal operator_int_1_U0_hw_uint_16_val_V_ap_vld : STD_LOGIC;
    signal ap_channel_done_val_assign_channel : STD_LOGIC;
    signal val_assign_channel_full_n : STD_LOGIC;
    signal read_U0_ap_start : STD_LOGIC;
    signal read_U0_ap_done : STD_LOGIC;
    signal read_U0_ap_continue : STD_LOGIC;
    signal read_U0_ap_idle : STD_LOGIC;
    signal read_U0_ap_ready : STD_LOGIC;
    signal read_U0_HWStream_hw_uint_1_values_V_val_V_read : STD_LOGIC;
    signal read_U0_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_channel_done_p_s : STD_LOGIC;
    signal p_s_full_n : STD_LOGIC;
    signal operator_int_U0_ap_start : STD_LOGIC;
    signal operator_int_U0_ap_done : STD_LOGIC;
    signal operator_int_U0_ap_continue : STD_LOGIC;
    signal operator_int_U0_ap_idle : STD_LOGIC;
    signal operator_int_U0_ap_ready : STD_LOGIC;
    signal operator_int_U0_hw_uint_1_val_V : STD_LOGIC_VECTOR (0 downto 0);
    signal operator_int_U0_hw_uint_1_val_V_ap_vld : STD_LOGIC;
    signal ap_channel_done_val_assign_1_channel : STD_LOGIC;
    signal val_assign_1_channel_full_n : STD_LOGIC;
    signal Block_proc7476_U0_ap_start : STD_LOGIC;
    signal Block_proc7476_U0_ap_done : STD_LOGIC;
    signal Block_proc7476_U0_ap_continue : STD_LOGIC;
    signal Block_proc7476_U0_ap_idle : STD_LOGIC;
    signal Block_proc7476_U0_ap_ready : STD_LOGIC;
    signal Block_proc7476_U0_arg_out_TDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_proc7476_U0_arg_out_TVALID : STD_LOGIC;
    signal Block_proc7476_U0_arg_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal this_assign_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal this_assign_channel_empty_n : STD_LOGIC;
    signal arg_in0_hwstream_val_full_n : STD_LOGIC;
    signal arg_in0_hwstream_val_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal arg_in0_hwstream_val_empty_n : STD_LOGIC;
    signal arg_out_data_values_s_full_n : STD_LOGIC;
    signal arg_out_data_values_s_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal arg_out_data_values_s_empty_n : STD_LOGIC;
    signal arg_out_tlast_values_full_n : STD_LOGIC;
    signal arg_out_tlast_values_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal arg_out_tlast_values_empty_n : STD_LOGIC;
    signal p_0_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_empty_n : STD_LOGIC;
    signal val_assign_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal val_assign_channel_empty_n : STD_LOGIC;
    signal p_s_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_empty_n : STD_LOGIC;
    signal val_assign_1_channel_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal val_assign_1_channel_empty_n : STD_LOGIC;
    signal Block_proc75_U0_start_full_n : STD_LOGIC;
    signal Block_proc75_U0_start_write : STD_LOGIC;
    signal start_for_unoptimized_conv_3_3_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_unoptimized_conv_3_3_U0_full_n : STD_LOGIC;
    signal start_for_unoptimized_conv_3_3_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_unoptimized_conv_3_3_U0_empty_n : STD_LOGIC;
    signal start_for_read_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_read_1_U0_full_n : STD_LOGIC;
    signal start_for_read_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_read_1_U0_empty_n : STD_LOGIC;
    signal start_for_read_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_read_U0_full_n : STD_LOGIC;
    signal start_for_read_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_read_U0_empty_n : STD_LOGIC;
    signal read_1_U0_start_full_n : STD_LOGIC;
    signal read_1_U0_start_write : STD_LOGIC;
    signal operator_int_1_U0_start_full_n : STD_LOGIC;
    signal operator_int_1_U0_start_write : STD_LOGIC;
    signal read_U0_start_full_n : STD_LOGIC;
    signal read_U0_start_write : STD_LOGIC;
    signal operator_int_U0_start_full_n : STD_LOGIC;
    signal operator_int_U0_start_write : STD_LOGIC;
    signal Block_proc7476_U0_start_full_n : STD_LOGIC;
    signal Block_proc7476_U0_start_write : STD_LOGIC;

    component Block_proc75 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        arg_in0_TDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        arg_in0_TVALID : IN STD_LOGIC;
        arg_in0_TREADY : OUT STD_LOGIC;
        arg_in0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component write_r IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        HWStream_hw_uint_16_values_V_val_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        HWStream_hw_uint_16_values_V_val_V_full_n : IN STD_LOGIC;
        HWStream_hw_uint_16_values_V_val_V_write : OUT STD_LOGIC;
        v_val_V_read : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component unoptimized_conv_3_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        hw_input_stencil_values_V_val_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        hw_input_stencil_values_V_val_V_empty_n : IN STD_LOGIC;
        hw_input_stencil_values_V_val_V_read : OUT STD_LOGIC;
        hw_output_stencil_values_V_val_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        hw_output_stencil_values_V_val_V_full_n : IN STD_LOGIC;
        hw_output_stencil_values_V_val_V_write : OUT STD_LOGIC;
        tlast_values_V_val_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        tlast_values_V_val_V_full_n : IN STD_LOGIC;
        tlast_values_V_val_V_write : OUT STD_LOGIC );
    end component;


    component read_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        HWStream_hw_uint_16_values_V_val_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        HWStream_hw_uint_16_values_V_val_V_empty_n : IN STD_LOGIC;
        HWStream_hw_uint_16_values_V_val_V_read : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component operator_int_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        hw_uint_16_val_V : OUT STD_LOGIC_VECTOR (15 downto 0);
        hw_uint_16_val_V_ap_vld : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component read_r IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        HWStream_hw_uint_1_values_V_val_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        HWStream_hw_uint_1_values_V_val_V_empty_n : IN STD_LOGIC;
        HWStream_hw_uint_1_values_V_val_V_read : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component operator_int IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        hw_uint_1_val_V : OUT STD_LOGIC_VECTOR (0 downto 0);
        hw_uint_1_val_V_ap_vld : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component Block_proc7476 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        val_assign : IN STD_LOGIC_VECTOR (15 downto 0);
        val_assign_1 : IN STD_LOGIC_VECTOR (0 downto 0);
        arg_out_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        arg_out_TVALID : OUT STD_LOGIC;
        arg_out_TREADY : IN STD_LOGIC;
        arg_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component fifo_w16_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_unoptimdEe IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_read_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_read_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Block_proc75_U0 : component Block_proc75
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc75_U0_ap_start,
        ap_done => Block_proc75_U0_ap_done,
        ap_continue => Block_proc75_U0_ap_continue,
        ap_idle => Block_proc75_U0_ap_idle,
        ap_ready => Block_proc75_U0_ap_ready,
        arg_in0_TDATA => arg_in0_TDATA,
        arg_in0_TVALID => arg_in0_TVALID,
        arg_in0_TREADY => Block_proc75_U0_arg_in0_TREADY,
        arg_in0_TLAST => arg_in0_TLAST,
        ap_return => Block_proc75_U0_ap_return);

    write_U0 : component write_r
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => write_U0_ap_start,
        start_full_n => start_for_unoptimized_conv_3_3_U0_full_n,
        ap_done => write_U0_ap_done,
        ap_continue => write_U0_ap_continue,
        ap_idle => write_U0_ap_idle,
        ap_ready => write_U0_ap_ready,
        start_out => write_U0_start_out,
        start_write => write_U0_start_write,
        HWStream_hw_uint_16_values_V_val_V_din => write_U0_HWStream_hw_uint_16_values_V_val_V_din,
        HWStream_hw_uint_16_values_V_val_V_full_n => arg_in0_hwstream_val_full_n,
        HWStream_hw_uint_16_values_V_val_V_write => write_U0_HWStream_hw_uint_16_values_V_val_V_write,
        v_val_V_read => this_assign_channel_dout);

    unoptimized_conv_3_3_U0 : component unoptimized_conv_3_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => unoptimized_conv_3_3_U0_ap_start,
        start_full_n => unoptimized_conv_3_3_U0_start_full_n,
        ap_done => unoptimized_conv_3_3_U0_ap_done,
        ap_continue => unoptimized_conv_3_3_U0_ap_continue,
        ap_idle => unoptimized_conv_3_3_U0_ap_idle,
        ap_ready => unoptimized_conv_3_3_U0_ap_ready,
        start_out => unoptimized_conv_3_3_U0_start_out,
        start_write => unoptimized_conv_3_3_U0_start_write,
        hw_input_stencil_values_V_val_V_dout => arg_in0_hwstream_val_dout,
        hw_input_stencil_values_V_val_V_empty_n => arg_in0_hwstream_val_empty_n,
        hw_input_stencil_values_V_val_V_read => unoptimized_conv_3_3_U0_hw_input_stencil_values_V_val_V_read,
        hw_output_stencil_values_V_val_V_din => unoptimized_conv_3_3_U0_hw_output_stencil_values_V_val_V_din,
        hw_output_stencil_values_V_val_V_full_n => arg_out_data_values_s_full_n,
        hw_output_stencil_values_V_val_V_write => unoptimized_conv_3_3_U0_hw_output_stencil_values_V_val_V_write,
        tlast_values_V_val_V_din => unoptimized_conv_3_3_U0_tlast_values_V_val_V_din,
        tlast_values_V_val_V_full_n => arg_out_tlast_values_full_n,
        tlast_values_V_val_V_write => unoptimized_conv_3_3_U0_tlast_values_V_val_V_write);

    read_1_U0 : component read_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => read_1_U0_ap_start,
        ap_done => read_1_U0_ap_done,
        ap_continue => read_1_U0_ap_continue,
        ap_idle => read_1_U0_ap_idle,
        ap_ready => read_1_U0_ap_ready,
        HWStream_hw_uint_16_values_V_val_V_dout => arg_out_data_values_s_dout,
        HWStream_hw_uint_16_values_V_val_V_empty_n => arg_out_data_values_s_empty_n,
        HWStream_hw_uint_16_values_V_val_V_read => read_1_U0_HWStream_hw_uint_16_values_V_val_V_read,
        ap_return => read_1_U0_ap_return);

    operator_int_1_U0 : component operator_int_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => operator_int_1_U0_ap_start,
        ap_done => operator_int_1_U0_ap_done,
        ap_continue => operator_int_1_U0_ap_continue,
        ap_idle => operator_int_1_U0_ap_idle,
        ap_ready => operator_int_1_U0_ap_ready,
        hw_uint_16_val_V => operator_int_1_U0_hw_uint_16_val_V,
        hw_uint_16_val_V_ap_vld => operator_int_1_U0_hw_uint_16_val_V_ap_vld,
        p_read => p_0_dout);

    read_U0 : component read_r
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => read_U0_ap_start,
        ap_done => read_U0_ap_done,
        ap_continue => read_U0_ap_continue,
        ap_idle => read_U0_ap_idle,
        ap_ready => read_U0_ap_ready,
        HWStream_hw_uint_1_values_V_val_V_dout => arg_out_tlast_values_dout,
        HWStream_hw_uint_1_values_V_val_V_empty_n => arg_out_tlast_values_empty_n,
        HWStream_hw_uint_1_values_V_val_V_read => read_U0_HWStream_hw_uint_1_values_V_val_V_read,
        ap_return => read_U0_ap_return);

    operator_int_U0 : component operator_int
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => operator_int_U0_ap_start,
        ap_done => operator_int_U0_ap_done,
        ap_continue => operator_int_U0_ap_continue,
        ap_idle => operator_int_U0_ap_idle,
        ap_ready => operator_int_U0_ap_ready,
        hw_uint_1_val_V => operator_int_U0_hw_uint_1_val_V,
        hw_uint_1_val_V_ap_vld => operator_int_U0_hw_uint_1_val_V_ap_vld,
        p_read => p_s_dout);

    Block_proc7476_U0 : component Block_proc7476
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_proc7476_U0_ap_start,
        ap_done => Block_proc7476_U0_ap_done,
        ap_continue => Block_proc7476_U0_ap_continue,
        ap_idle => Block_proc7476_U0_ap_idle,
        ap_ready => Block_proc7476_U0_ap_ready,
        val_assign => val_assign_channel_dout,
        val_assign_1 => val_assign_1_channel_dout,
        arg_out_TDATA => Block_proc7476_U0_arg_out_TDATA,
        arg_out_TVALID => Block_proc7476_U0_arg_out_TVALID,
        arg_out_TREADY => arg_out_TREADY,
        arg_out_TLAST => Block_proc7476_U0_arg_out_TLAST);

    this_assign_channel_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_proc75_U0_ap_return,
        if_full_n => this_assign_channel_full_n,
        if_write => Block_proc75_U0_ap_done,
        if_dout => this_assign_channel_dout,
        if_empty_n => this_assign_channel_empty_n,
        if_read => write_U0_ap_ready);

    arg_in0_hwstream_val_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => write_U0_HWStream_hw_uint_16_values_V_val_V_din,
        if_full_n => arg_in0_hwstream_val_full_n,
        if_write => write_U0_HWStream_hw_uint_16_values_V_val_V_write,
        if_dout => arg_in0_hwstream_val_dout,
        if_empty_n => arg_in0_hwstream_val_empty_n,
        if_read => unoptimized_conv_3_3_U0_hw_input_stencil_values_V_val_V_read);

    arg_out_data_values_s_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => unoptimized_conv_3_3_U0_hw_output_stencil_values_V_val_V_din,
        if_full_n => arg_out_data_values_s_full_n,
        if_write => unoptimized_conv_3_3_U0_hw_output_stencil_values_V_val_V_write,
        if_dout => arg_out_data_values_s_dout,
        if_empty_n => arg_out_data_values_s_empty_n,
        if_read => read_1_U0_HWStream_hw_uint_16_values_V_val_V_read);

    arg_out_tlast_values_U : component fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => unoptimized_conv_3_3_U0_tlast_values_V_val_V_din,
        if_full_n => arg_out_tlast_values_full_n,
        if_write => unoptimized_conv_3_3_U0_tlast_values_V_val_V_write,
        if_dout => arg_out_tlast_values_dout,
        if_empty_n => arg_out_tlast_values_empty_n,
        if_read => read_U0_HWStream_hw_uint_1_values_V_val_V_read);

    p_0_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_1_U0_ap_return,
        if_full_n => p_0_full_n,
        if_write => read_1_U0_ap_done,
        if_dout => p_0_dout,
        if_empty_n => p_0_empty_n,
        if_read => operator_int_1_U0_ap_ready);

    val_assign_channel_U : component fifo_w16_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => operator_int_1_U0_hw_uint_16_val_V,
        if_full_n => val_assign_channel_full_n,
        if_write => operator_int_1_U0_ap_done,
        if_dout => val_assign_channel_dout,
        if_empty_n => val_assign_channel_empty_n,
        if_read => Block_proc7476_U0_ap_ready);

    p_s_U : component fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => read_U0_ap_return,
        if_full_n => p_s_full_n,
        if_write => read_U0_ap_done,
        if_dout => p_s_dout,
        if_empty_n => p_s_empty_n,
        if_read => operator_int_U0_ap_ready);

    val_assign_1_channel_U : component fifo_w1_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => operator_int_U0_hw_uint_1_val_V,
        if_full_n => val_assign_1_channel_full_n,
        if_write => operator_int_U0_ap_done,
        if_dout => val_assign_1_channel_dout,
        if_empty_n => val_assign_1_channel_empty_n,
        if_read => Block_proc7476_U0_ap_ready);

    start_for_unoptimdEe_U : component start_for_unoptimdEe
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_unoptimized_conv_3_3_U0_din,
        if_full_n => start_for_unoptimized_conv_3_3_U0_full_n,
        if_write => write_U0_start_write,
        if_dout => start_for_unoptimized_conv_3_3_U0_dout,
        if_empty_n => start_for_unoptimized_conv_3_3_U0_empty_n,
        if_read => unoptimized_conv_3_3_U0_ap_ready);

    start_for_read_1_U0_U : component start_for_read_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_read_1_U0_din,
        if_full_n => start_for_read_1_U0_full_n,
        if_write => unoptimized_conv_3_3_U0_start_write,
        if_dout => start_for_read_1_U0_dout,
        if_empty_n => start_for_read_1_U0_empty_n,
        if_read => read_1_U0_ap_ready);

    start_for_read_U0_U : component start_for_read_U0
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_read_U0_din,
        if_full_n => start_for_read_U0_full_n,
        if_write => unoptimized_conv_3_3_U0_start_write,
        if_dout => start_for_read_U0_dout,
        if_empty_n => start_for_read_U0_empty_n,
        if_read => read_U0_ap_ready);




    Block_proc7476_U0_ap_continue <= ap_const_logic_1;
    Block_proc7476_U0_ap_start <= (val_assign_channel_empty_n and val_assign_1_channel_empty_n);
    Block_proc7476_U0_start_full_n <= ap_const_logic_1;
    Block_proc7476_U0_start_write <= ap_const_logic_0;
    Block_proc75_U0_ap_continue <= this_assign_channel_full_n;
    Block_proc75_U0_ap_start <= ap_const_logic_1;
    Block_proc75_U0_start_full_n <= ap_const_logic_1;
    Block_proc75_U0_start_write <= ap_const_logic_0;
    ap_channel_done_p_0 <= read_1_U0_ap_done;
    ap_channel_done_p_s <= read_U0_ap_done;
    ap_channel_done_this_assign_channel <= Block_proc75_U0_ap_done;
    ap_channel_done_val_assign_1_channel <= operator_int_U0_ap_done;
    ap_channel_done_val_assign_channel <= operator_int_1_U0_ap_done;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_continue <= ap_const_logic_0;
    arg_in0_TREADY <= Block_proc75_U0_arg_in0_TREADY;
    arg_out_TDATA <= Block_proc7476_U0_arg_out_TDATA;
    arg_out_TLAST <= Block_proc7476_U0_arg_out_TLAST;
    arg_out_TVALID <= Block_proc7476_U0_arg_out_TVALID;
    operator_int_1_U0_ap_continue <= val_assign_channel_full_n;
    operator_int_1_U0_ap_start <= p_0_empty_n;
    operator_int_1_U0_start_full_n <= ap_const_logic_1;
    operator_int_1_U0_start_write <= ap_const_logic_0;
    operator_int_U0_ap_continue <= val_assign_1_channel_full_n;
    operator_int_U0_ap_start <= p_s_empty_n;
    operator_int_U0_start_full_n <= ap_const_logic_1;
    operator_int_U0_start_write <= ap_const_logic_0;
    read_1_U0_ap_continue <= p_0_full_n;
    read_1_U0_ap_start <= start_for_read_1_U0_empty_n;
    read_1_U0_start_full_n <= ap_const_logic_1;
    read_1_U0_start_write <= ap_const_logic_0;
    read_U0_ap_continue <= p_s_full_n;
    read_U0_ap_start <= start_for_read_U0_empty_n;
    read_U0_start_full_n <= ap_const_logic_1;
    read_U0_start_write <= ap_const_logic_0;
    start_for_read_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_read_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_unoptimized_conv_3_3_U0_din <= (0=>ap_const_logic_1, others=>'-');
    unoptimized_conv_3_3_U0_ap_continue <= ap_const_logic_1;
    unoptimized_conv_3_3_U0_ap_start <= start_for_unoptimized_conv_3_3_U0_empty_n;
    unoptimized_conv_3_3_U0_start_full_n <= (start_for_read_U0_full_n and start_for_read_1_U0_full_n);
    write_U0_ap_continue <= ap_const_logic_1;
    write_U0_ap_start <= this_assign_channel_empty_n;
end behav;
