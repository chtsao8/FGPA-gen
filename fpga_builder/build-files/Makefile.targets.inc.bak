###############################################################################
# Build Process Helper
#------------------------------------------------------------------------------
process_helper: \
	$(HALIDE_HW_SUPPORT_PATH)/hardware_process_helper.cpp \
	$(HALIDE_HW_SUPPORT_PATH)/hardware_process_helper.h
	@mkdir -p $(APP_BIN_PATH)
	$(CXX) $(HALIDE_CXX_FLAGS) -c $< -o $(APP_BIN_PATH)/$@.o

###############################################################################
# Build Generator
###############################################################################
$(APP_BIN_PATH)/generator: $(TESTNAME)_generator.cpp $(GENERATOR_DEPS)
	@mkdir -p $(APP_BIN_PATH)
	$(CXX) $(HALIDE_CXX_FLAGS) -fno-rtti $(filter-out %.h,$^) -o $@ \
        -ldl -lpthread -lz \
        -L$(COREIR_SRC_PATH)/lib -lcurses -Wl,-rpath,$(COREIR_SRC_PATH)/lib \
        -lcoreir-commonlib -lcoreir -lcoreirsim -lcoreir-float \
        -L$(BUFFER_MAPPING_SRC_PATH)/cfunc/bin -Wl,-rpath,$(BUFFER_MAPPING_SRC_PATH)/cfunc/bin \
        -lcoreir-lakelib

###############################################################################
# Build Halide Runtime
###############################################################################

halide_runtime $(APP_BIN_PATH)/halide_runtime.o: $(APP_BIN_PATH)/generator
	$^ -r halide_runtime -e o target=$(HL_TARGET) -o $(APP_BIN_PATH)/

###############################################################################
# Build CPU Pipeline
###############################################################################
cpu: $(APP_BIN_PATH)/generator
	@mkdir -p $(APP_BIN_PATH)/cpu
	$^ -g $(TESTNAME) -o $(APP_BIN_PATH)/cpu -f $(TESTNAME) target=$(HL_TARGET)

###############################################################################
# RDAI FLAGS
###############################################################################

RDAI_CXX_FLAGS                  = -I$(RDAI_SRC_PATH)/platform_runtimes/$(RDAI_PLATFORM_RUNTIME)/include
RDAI_CXX_FLAGS                  += -I$(RDAI_SRC_PATH)/host_runtimes/$(RDAI_HOST_RUNTIME)/include
RDAI_CXX_FLAGS                  += -I$(RDAI_SRC_PATH)/rdai_api

###############################################################################
# Build Clockwork Pipeline
###############################################################################

CLOCKWORK_FILES                 = clockwork_codegen.cpp $(TESTNAME)_memory.cpp $(TESTNAME)_compute.h
CLOCKWORK_FILES_TGTS            = $(foreach f,$(CLOCKWORK_FILES),$(APP_BIN_PATH)/clockwork/$f)
CLOCKWORK_UNOPT_HLS_FILES       = unoptimized_$(TESTNAME).cpp unoptimized_$(TESTNAME).h
CLOCKWORK_UNOPT_HLS_TGTS        = $(foreach f,$(CLOCKWORK_UNOPT_HLS_FILES),$(APP_BIN_PATH)/clockwork/$f)

clockwork_files $(CLOCKWORK_FILES_TGTS): $(APP_BIN_PATH)/generator
	@mkdir -p $(APP_BIN_PATH)/clockwork
	$^ -g $(TESTNAME) -o $(APP_BIN_PATH)/clockwork -f $(TESTNAME) target=$(HL_TARGET)-clockwork -e clockwork,html

clockwork_codegen $(APP_BIN_PATH)/clockwork/clockwork_codegen: $(CLOCKWORK_FILES_TGTS)
	$(CXX) -I $(APP_BIN_PATH)/clockwork $(CLOCKWORK_CXX_FLAGS) $(APP_BIN_PATH)/clockwork/clockwork_codegen.cpp -o $(APP_BIN_PATH)/clockwork/clockwork_codegen $(CLOCKWORK_LD_FLAGS)

clockwork_unopt_hls $(CLOCKWORK_UNOPT_HLS_TGTS): $(APP_BIN_PATH)/clockwork/clockwork_codegen
	cd $(APP_BIN_PATH)/clockwork && ./clockwork_codegen unopt > /dev/null && cd ../..

# Choose Compiler
ifeq ($(HL_TARGET),host)
    COMPILER_PREFIX = 
else
    COMPILER_PREFIX = aarch64-aha-linux-gnu-
endif
COMPILER = $(COMPILER_PREFIX)$(CXX)

clockwork_process $(APP_BIN_PATH)/clockwork/clockwork_process.o: process.cpp $(CLOCKWORK_UNOPT_HLS_TGTS)
	$(COMPILER) -c $< -DWITH_CLOCKWORK $(RDAI_CXX_FLAGS) $(CLOCKWORK_CXX_FLAGS) $(HALIDE_CXX_FLAGS) \
                -I$(HALIDE_HW_SUPPORT_PATH) -I$(APP_BIN_PATH)/clockwork -o $(APP_BIN_PATH)/clockwork/clockwork_process.o

clockwork_hls_sim $(APP_BIN_PATH)/clockwork/clockwork_hls_sim.o: $(CLOCKWORK_UNOPT_HLS_TGTS)
	$(COMPILER) -c $(APP_BIN_PATH)/clockwork/unoptimized_$(TESTNAME).cpp $(CLOCKWORK_CXX_FLAGS) \
                -I $(APP_BIN_PATH)/clockwork -o $(APP_BIN_PATH)/clockwork/clockwork_hls_sim.o

clockwork_sim_testscript $(APP_BIN_PATH)/clockwork/clockwork_sim_testscript.o: $(APP_BIN_PATH)/clockwork/clockwork_testscript.cpp
	$(COMPILER) -c $< $(RDAI_CXX_FLAGS) -I $(APP_BIN_PATH)/clockwork -I $(HALIDE_CXX_FLAGS) -I $(CLOCKWORK_CXX_FLAGS) \
                -o $(APP_BIN_PATH)/clockwork/clockwork_sim_testscript.o

rdai_platform $(APP_BIN_PATH)/clockwork/rdai_platform.o: $(RDAI_SRC_PATH)/platform_runtimes/$(RDAI_PLATFORM_RUNTIME)/src/$(RDAI_PLATFORM_RUNTIME)_platform.cpp
	$(COMPILER) -c $< $(RDAI_CXX_FLAGS) -I $(APP_BIN_PATH)/clockwork -o $(APP_BIN_PATH)/clockwork/rdai_platform.o

rdai_host $(APP_BIN_PATH)/clockwork/rdai_host.o: $(RDAI_SRC_PATH)/host_runtimes/$(RDAI_HOST_RUNTIME)/src/$(RDAI_HOST_RUNTIME).cpp
	$(COMPILER) -c $< $(RDAI_CXX_FLAGS) -I $(APP_BIN_PATH)/clockwork -o $(APP_BIN_PATH)/clockwork/rdai_host.o

rdai_app_sim $(APP_BIN_PATH)/clockwork/rdai_app_sim.a: $(APP_BIN_PATH)/clockwork/clockwork_process.o \
                                                       $(APP_BIN_PATH)/clockwork/clockwork_hls_sim.o \
                                                       $(APP_BIN_PATH)/clockwork/clockwork_sim_testscript.o \
                                                       $(APP_BIN_PATH)/clockwork/rdai_platform.o \
                                                       $(APP_BIN_PATH)/clockwork/rdai_host.o \
                                                       $(APP_BIN_PATH)/halide_runtime.o
	$(COMPILER_PREFIX)ar rcs $(APP_BIN_PATH)/clockwork/rdai_app_sim.a $^ 


###############################################################################
# Clean Builds
###############################################################################

clean:
	rm -rf $(APP_BIN_PATH)

clean-cpu:
	rm -rf $(APP_BIN_PATH)/cpu

clean-clockwork:
	rm -rf $(APP_BIN_PATH)/clockwork
