// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="hls_target,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.603000,HLS_SYN_LAT=65540,HLS_SYN_TPT=65540,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=88,HLS_SYN_LUT=469,HLS_VERSION=2020_1}" *)

module hls_target (
        arg_0_TDATA,
        arg_0_TLAST,
        arg_1_TDATA,
        arg_1_TLAST,
        ap_clk,
        ap_rst_n,
        arg_1_TVALID,
        arg_1_TREADY,
        arg_0_TVALID,
        arg_0_TREADY
);


output  [31:0] arg_0_TDATA;
output  [0:0] arg_0_TLAST;
input  [7:0] arg_1_TDATA;
input  [0:0] arg_1_TLAST;
input   ap_clk;
input   ap_rst_n;
input   arg_1_TVALID;
output   arg_1_TREADY;
output   arg_0_TVALID;
input   arg_0_TREADY;

 reg    ap_rst_n_inv;
wire    Loop_1_proc20_U0_ap_start;
wire    Loop_1_proc20_U0_ap_done;
wire    Loop_1_proc20_U0_ap_continue;
wire    Loop_1_proc20_U0_ap_idle;
wire    Loop_1_proc20_U0_ap_ready;
wire    Loop_1_proc20_U0_start_out;
wire    Loop_1_proc20_U0_start_write;
wire    Loop_1_proc20_U0_arg_1_TREADY;
wire   [7:0] Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_value_V_din;
wire    Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_value_V_write;
wire   [0:0] Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_last_V_din;
wire    Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_last_V_write;
wire    Loop_2_proc21_U0_ap_start;
wire    Loop_2_proc21_U0_ap_done;
wire    Loop_2_proc21_U0_ap_continue;
wire    Loop_2_proc21_U0_ap_idle;
wire    Loop_2_proc21_U0_ap_ready;
wire    Loop_2_proc21_U0_p_in_1_stencil_stream_to_hw_output_1_V_value_V_read;
wire    Loop_2_proc21_U0_p_in_1_stencil_stream_to_hw_output_1_V_last_V_read;
wire   [31:0] Loop_2_proc21_U0_arg_0_TDATA;
wire    Loop_2_proc21_U0_arg_0_TVALID;
wire   [0:0] Loop_2_proc21_U0_arg_0_TLAST;
wire    ap_sync_continue;
wire    p_in_1_stencil_stream_2_full_n;
wire   [7:0] p_in_1_stencil_stream_2_dout;
wire    p_in_1_stencil_stream_2_empty_n;
wire    p_in_1_stencil_stream_3_full_n;
wire   [0:0] p_in_1_stencil_stream_3_dout;
wire    p_in_1_stencil_stream_3_empty_n;
wire   [0:0] start_for_Loop_2_proc21_U0_din;
wire    start_for_Loop_2_proc21_U0_full_n;
wire   [0:0] start_for_Loop_2_proc21_U0_dout;
wire    start_for_Loop_2_proc21_U0_empty_n;
wire    Loop_2_proc21_U0_start_full_n;
wire    Loop_2_proc21_U0_start_write;

Loop_1_proc20 Loop_1_proc20_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_1_proc20_U0_ap_start),
    .start_full_n(start_for_Loop_2_proc21_U0_full_n),
    .ap_done(Loop_1_proc20_U0_ap_done),
    .ap_continue(Loop_1_proc20_U0_ap_continue),
    .ap_idle(Loop_1_proc20_U0_ap_idle),
    .ap_ready(Loop_1_proc20_U0_ap_ready),
    .start_out(Loop_1_proc20_U0_start_out),
    .start_write(Loop_1_proc20_U0_start_write),
    .arg_1_TDATA(arg_1_TDATA),
    .arg_1_TVALID(arg_1_TVALID),
    .arg_1_TREADY(Loop_1_proc20_U0_arg_1_TREADY),
    .arg_1_TLAST(arg_1_TLAST),
    .p_in_1_stencil_stream_to_hw_output_1_V_value_V_din(Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_value_V_din),
    .p_in_1_stencil_stream_to_hw_output_1_V_value_V_full_n(p_in_1_stencil_stream_2_full_n),
    .p_in_1_stencil_stream_to_hw_output_1_V_value_V_write(Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_value_V_write),
    .p_in_1_stencil_stream_to_hw_output_1_V_last_V_din(Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_last_V_din),
    .p_in_1_stencil_stream_to_hw_output_1_V_last_V_full_n(p_in_1_stencil_stream_3_full_n),
    .p_in_1_stencil_stream_to_hw_output_1_V_last_V_write(Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_last_V_write)
);

Loop_2_proc21 Loop_2_proc21_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_2_proc21_U0_ap_start),
    .ap_done(Loop_2_proc21_U0_ap_done),
    .ap_continue(Loop_2_proc21_U0_ap_continue),
    .ap_idle(Loop_2_proc21_U0_ap_idle),
    .ap_ready(Loop_2_proc21_U0_ap_ready),
    .p_in_1_stencil_stream_to_hw_output_1_V_value_V_dout(p_in_1_stencil_stream_2_dout),
    .p_in_1_stencil_stream_to_hw_output_1_V_value_V_empty_n(p_in_1_stencil_stream_2_empty_n),
    .p_in_1_stencil_stream_to_hw_output_1_V_value_V_read(Loop_2_proc21_U0_p_in_1_stencil_stream_to_hw_output_1_V_value_V_read),
    .p_in_1_stencil_stream_to_hw_output_1_V_last_V_dout(p_in_1_stencil_stream_3_dout),
    .p_in_1_stencil_stream_to_hw_output_1_V_last_V_empty_n(p_in_1_stencil_stream_3_empty_n),
    .p_in_1_stencil_stream_to_hw_output_1_V_last_V_read(Loop_2_proc21_U0_p_in_1_stencil_stream_to_hw_output_1_V_last_V_read),
    .arg_0_TDATA(Loop_2_proc21_U0_arg_0_TDATA),
    .arg_0_TVALID(Loop_2_proc21_U0_arg_0_TVALID),
    .arg_0_TREADY(arg_0_TREADY),
    .arg_0_TLAST(Loop_2_proc21_U0_arg_0_TLAST)
);

fifo_w8_d1_S p_in_1_stencil_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_value_V_din),
    .if_full_n(p_in_1_stencil_stream_2_full_n),
    .if_write(Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_value_V_write),
    .if_dout(p_in_1_stencil_stream_2_dout),
    .if_empty_n(p_in_1_stencil_stream_2_empty_n),
    .if_read(Loop_2_proc21_U0_p_in_1_stencil_stream_to_hw_output_1_V_value_V_read)
);

fifo_w1_d1_S p_in_1_stencil_stream_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_last_V_din),
    .if_full_n(p_in_1_stencil_stream_3_full_n),
    .if_write(Loop_1_proc20_U0_p_in_1_stencil_stream_to_hw_output_1_V_last_V_write),
    .if_dout(p_in_1_stencil_stream_3_dout),
    .if_empty_n(p_in_1_stencil_stream_3_empty_n),
    .if_read(Loop_2_proc21_U0_p_in_1_stencil_stream_to_hw_output_1_V_last_V_read)
);

start_for_Loop_2_bkb start_for_Loop_2_bkb_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Loop_2_proc21_U0_din),
    .if_full_n(start_for_Loop_2_proc21_U0_full_n),
    .if_write(Loop_1_proc20_U0_start_write),
    .if_dout(start_for_Loop_2_proc21_U0_dout),
    .if_empty_n(start_for_Loop_2_proc21_U0_empty_n),
    .if_read(Loop_2_proc21_U0_ap_ready)
);

assign Loop_1_proc20_U0_ap_continue = 1'b1;

assign Loop_1_proc20_U0_ap_start = 1'b1;

assign Loop_2_proc21_U0_ap_continue = 1'b1;

assign Loop_2_proc21_U0_ap_start = start_for_Loop_2_proc21_U0_empty_n;

assign Loop_2_proc21_U0_start_full_n = 1'b1;

assign Loop_2_proc21_U0_start_write = 1'b0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b0;

assign arg_0_TDATA = Loop_2_proc21_U0_arg_0_TDATA;

assign arg_0_TLAST = Loop_2_proc21_U0_arg_0_TLAST;

assign arg_0_TVALID = Loop_2_proc21_U0_arg_0_TVALID;

assign arg_1_TREADY = Loop_1_proc20_U0_arg_1_TREADY;

assign start_for_Loop_2_proc21_U0_din = 1'b1;

endmodule //hls_target
